> Tests
  A text empty     + repl.nil                   => ETError + most general error message
  B text empty     + repl empty                 => ETError + hint: text and repl text are empty
  C text not empty + repl not nil and empty => ETError + hint: why empty hint (repl made text empty)

> simplifying
  > A and B raise error for the same reason, i.e, empty text, but with a different error message based on the repl:
    - if repl is nil   => general message
    - if repl is empty => hint: both text and repl text empty
  > About C
    > keep in mind
      - repl causes text to be empty AFTER the replacement proecedure
      - the text was not empty before because the logic got 'here' (post replacement)
      - if text ends up empty 'here', that is because all text chars were unsupported when passed to as argument



> EmptyTextError types for text and repl_text argument
  - empty text + repl.nil   ==> HANDLED FIRST ===> text empty
  - empty text + repl.nil   ==> HANDLED FIRST ===> text empty /=> ..cannot be empty.....must contain at least one...
  - empty text + repl.empty ==> HANDLED FIRST ===> text empty /=> ..both are empty..
  - unsup text + repl.empty ==> => ..causes text to be empty ...

> Getting this to work in unison with the replacement text error
  ? what happens when text empty and replacement text invalid?
  > Right now the tests re made with empty text, so tat needs to change

> TextSetting#set flow (text, repl_text = nil)
  # check text empty right away, no way it is ending up non empty
  # catches the following cases

  - if text.empty => EmptyTextError

  # normal replacement procedure
  - if replacement desired
    # raise InvalidReplacementTextError if repl contains unsupported characters
    - validate replacement